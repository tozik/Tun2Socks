name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'     
        required: true
        type: string
      tag:
        description: 'Git Tag to checkout'
        required: true
        type: string

jobs:
  release:
    runs-on: macOS-15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: 'heiher/hev-socks5-tunnel'
          submodules: 'true'
          path: 'temp'
          ref: ${{ github.event.inputs.tag }}
      - uses: actions/checkout@v3
        with:
          repository: 'tozik/hev-socks5-tunnel-iphonesimulator-new'
          path: 'fake'
          
      - name: build macos arm64_x86_64
        run: |
          mkdir macos_arm64_x86_64
          mkdir macos_arm64_x86_64/macos_arm64
          mkdir macos_arm64_x86_64/macos_x86_64
          cd temp
          make clean
          make PP=g++ \
               CC=gcc \
               CFLAGS="-arch x86_64 -mmacosx-version-min=12.0" \
               LFLAGS="-arch x86_64 -mmacosx-version-min=12.0 -Wl,-Bsymbolic-functions" static
          libtool -static -o ../macos_arm64_x86_64/macos_x86_64/libhev-socks5-tunnel.a \
                  bin/libhev-socks5-tunnel.a \
                  third-part/lwip/bin/liblwip.a \
                  third-part/yaml/bin/libyaml.a \
                  third-part/hev-task-system/bin/libhev-task-system.a
          make clean
          make clean
          make PP=g++ \
               CC=gcc \
               CFLAGS="-arch arm64 -mmacosx-version-min=12.0" \
               LFLAGS="-arch arm64 -mmacosx-version-min=12.0 -Wl,-Bsymbolic-functions" static
          libtool -static -o ../macos_arm64_x86_64/macos_arm64/libhev-socks5-tunnel.a \
                  bin/libhev-socks5-tunnel.a \
                  third-part/lwip/bin/liblwip.a \
                  third-part/yaml/bin/libyaml.a \
                  third-part/hev-task-system/bin/libhev-task-system.a
          cd ../macos_arm64_x86_64
          lipo -create -o ./libhev-socks5-tunnel.a ./macos_arm64/libhev-socks5-tunnel.a ./macos_x86_64/libhev-socks5-tunnel.a

          
      - name: build iphoneos arm64
        run: |
          mkdir iphoneos_arm64
          cd temp
          make clean
          make PP="xcrun --sdk iphoneos --toolchain iphoneos clang" \
               CC="xcrun --sdk iphoneos --toolchain iphoneos clang" \
               CFLAGS="-arch arm64 -mios-version-min=12.0" \
               LFLAGS="-arch arm64 -mios-version-min=12.0 -Wl,-Bsymbolic-functions" static
          libtool -static -o ../iphoneos_arm64/libhev-socks5-tunnel.a \
                  bin/libhev-socks5-tunnel.a \
                  third-part/lwip/bin/liblwip.a \
                  third-part/yaml/bin/libyaml.a \
                  third-part/hev-task-system/bin/libhev-task-system.a
          make clean
          
      - name: build iphonesimulator arm64_x86_64
        run: |
          mkdir iphonesimulator_arm64_x86_64
          mkdir iphonesimulator_arm64_x86_64/iphonesimulator_arm64
          mkdir iphonesimulator_arm64_x86_64/iphonesimulator_x86_64
          cd fake
          make clean
          make PP="xcrun -sdk iphonesimulator clang" \
               CC="xcrun -sdk iphonesimulator clang" \
               CFLAGS="-arch arm64 -mios-simulator-version-min=12.0" \
               LFLAGS="-arch arm64 -mios-simulator-version-min=12.0 -Wl,-Bsymbolic-functions" static
          cp bin/libhev-socks5-tunnel.a ../iphonesimulator_arm64_x86_64/iphonesimulator_arm64/libhev-socks5-tunnel.a
          make clean
          make PP="xcrun -sdk iphonesimulator clang" \
               CC="xcrun -sdk iphonesimulator clang" \
               CFLAGS="-arch x86_64 -mios-simulator-version-min=12.0" \
               LFLAGS="-arch x86_64 -mios-simulator-version-min=12.0 -Wl,-Bsymbolic-functions" static
          cp bin/libhev-socks5-tunnel.a ../iphonesimulator_arm64_x86_64/iphonesimulator_x86_64/libhev-socks5-tunnel.a
          make clean
          cd ../iphonesimulator_arm64_x86_64
          lipo -create -o ./libhev-socks5-tunnel.a ./iphonesimulator_arm64/libhev-socks5-tunnel.a ./iphonesimulator_x86_64/libhev-socks5-tunnel.a
          
      - name: Build xcframework
        run: |
          mkdir include
          cp temp/src/hev-main.h include/hev-socks5-tunnel.h
          cp ./Templates/HevSocks5Tunnel.template include/module.modulemap
          xcodebuild -create-xcframework \
                     -library ./iphoneos_arm64/libhev-socks5-tunnel.a \
                     -headers ./include \
                     -library ./iphonesimulator_arm64_x86_64/libhev-socks5-tunnel.a \
                     -headers ./include \
                     -library ./macos_arm64_x86_64/libhev-socks5-tunnel.a \
                     -headers ./include \
                     -output ./HevSocks5Tunnel.xcframework
          zip -r HevSocks5Tunnel.xcframework.zip HevSocks5Tunnel.xcframework
      
      - name: Update package file
        run: |
          export CHECKSUM=$(shasum -a 256 ./HevSocks5Tunnel.xcframework.zip | awk '{print $1}')
          echo "Computed SHA256 checksum: $CHECKSUM"
          echo "// swift-tools-version: 5.7" > Package.swift
          echo "" >> Package.swift
          echo "import PackageDescription" >> Package.swift
          echo "" >> Package.swift
          echo "let package = Package(" >> Package.swift
          echo "  name: \"Tun2SocksKit\"," >> Package.swift
          echo "  platforms: [.iOS(.v15), .macOS(.v13)]," >> Package.swift
          echo "  products: [" >> Package.swift
          echo "    .library(name: \"Tun2SocksKit\", targets: [\"Tun2SocksKit\"])," >> Package.swift
          echo "    .library(name: \"Tun2SocksKitC\", targets: [\"Tun2SocksKitC\"])" >> Package.swift
          echo "  ]," >> Package.swift
          echo "  targets: [" >> Package.swift
          echo "    .target(" >> Package.swift
          echo "      name: \"Tun2SocksKit\"," >> Package.swift
          echo "      dependencies: [\"HevSocks5Tunnel\", \"Tun2SocksKitC\"]" >> Package.swift
          echo "    )," >> Package.swift
          echo "    .target(" >> Package.swift
          echo "      name: \"Tun2SocksKitC\"," >> Package.swift
          echo "      publicHeadersPath: \".\"" >> Package.swift
          echo "    )," >> Package.swift
          echo "    .binaryTarget(" >> Package.swift
          echo "      name: \"HevSocks5Tunnel\"," >> Package.swift
          echo "      url: \"https://github.com/tozik/Tun2SocksKit/releases/download/${{ github.event.inputs.version }}/HevSocks5Tunnel.xcframework.zip\"," >> Package.swift
          echo "      checksum: \"$CHECKSUM\"" >> Package.swift
          echo "    )" >> Package.swift
          echo "  ]" >> Package.swift
          echo ")" >> Package.swift
                
    # Пушим артефакт и Package.swift
      - name: Commit build artifact and Package.swift
        run: |
          # Выводим список файлов в текущем каталоге и проверяем артефакт
          ls -l ./HevSocks5Tunnel.xcframework.zip
          shasum -a 256 ./HevSocks5Tunnel.xcframework.zip
          
          # Добавляем все нужные файлы в git
          git add Package.swift HevSocks5Tunnel.xcframework.zip
          
          # Выполняем commit с тегом версии
          git commit -m "Add build artifact: ${{ github.event.inputs.version }}"
          
          # Пушим изменения в текущий репозиторий
          git push
          
          # Проверяем результат пуша
          ls -l ./HevSocks5Tunnel.xcframework.zip
          shasum -a 256 ./HevSocks5Tunnel.xcframework.zip

