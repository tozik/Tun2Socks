name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'     
        required: true
        type: string
      tag:
        description: 'Git Tag to checkout'
        required: true
        type: string

jobs:
  release:
    runs-on: macOS-15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: 'heiher/hev-socks5-tunnel'
          submodules: 'true'
          path: 'temp'
          ref: ${{ github.event.inputs.tag }}
      - uses: actions/checkout@v3
        with:
          repository: 'tozik/hev-socks5-tunnel-iphonesimulator-new'
          path: 'fake'
          
      - name: build macos arm64_x86_64
        run: |
          mkdir macos_arm64_x86_64
          mkdir macos_arm64_x86_64/macos_arm64
          mkdir macos_arm64_x86_64/macos_x86_64
          cd temp
          make clean
          make PP=g++ \
               CC=gcc \
               CFLAGS="-arch x86_64 -mmacosx-version-min=12.0" \
               LFLAGS="-arch x86_64 -mmacosx-version-min=12.0 -Wl,-Bsymbolic-functions" static
          libtool -static -o ../macos_arm64_x86_64/macos_x86_64/libhev-socks5-tunnel.a \
                  bin/libhev-socks5-tunnel.a \
                  third-part/lwip/bin/liblwip.a \
                  third-part/yaml/bin/libyaml.a \
                  third-part/hev-task-system/bin/libhev-task-system.a
          make clean
          make clean
          make PP=g++ \
               CC=gcc \
               CFLAGS="-arch arm64 -mmacosx-version-min=12.0" \
               LFLAGS="-arch arm64 -mmacosx-version-min=12.0 -Wl,-Bsymbolic-functions" static
          libtool -static -o ../macos_arm64_x86_64/macos_arm64/libhev-socks5-tunnel.a \
                  bin/libhev-socks5-tunnel.a \
                  third-part/lwip/bin/liblwip.a \
                  third-part/yaml/bin/libyaml.a \
                  third-part/hev-task-system/bin/libhev-task-system.a
          cd ../macos_arm64_x86_64
          lipo -create -o ./libhev-socks5-tunnel.a ./macos_arm64/libhev-socks5-tunnel.a ./macos_x86_64/libhev-socks5-tunnel.a

          
      - name: build iphoneos arm64
        run: |
          mkdir iphoneos_arm64
          cd temp
          make clean
          make PP="xcrun --sdk iphoneos --toolchain iphoneos clang" \
               CC="xcrun --sdk iphoneos --toolchain iphoneos clang" \
               CFLAGS="-arch arm64 -mios-version-min=12.0" \
               LFLAGS="-arch arm64 -mios-version-min=12.0 -Wl,-Bsymbolic-functions" static
          libtool -static -o ../iphoneos_arm64/libhev-socks5-tunnel.a \
                  bin/libhev-socks5-tunnel.a \
                  third-part/lwip/bin/liblwip.a \
                  third-part/yaml/bin/libyaml.a \
                  third-part/hev-task-system/bin/libhev-task-system.a
          make clean
          
      - name: build iphonesimulator arm64_x86_64
        run: |
          mkdir iphonesimulator_arm64_x86_64
          mkdir iphonesimulator_arm64_x86_64/iphonesimulator_arm64
          mkdir iphonesimulator_arm64_x86_64/iphonesimulator_x86_64
          cd fake
          make clean
          make PP="xcrun -sdk iphonesimulator clang" \
               CC="xcrun -sdk iphonesimulator clang" \
               CFLAGS="-arch arm64 -mios-simulator-version-min=12.0" \
               LFLAGS="-arch arm64 -mios-simulator-version-min=12.0 -Wl,-Bsymbolic-functions" static
          cp bin/libhev-socks5-tunnel.a ../iphonesimulator_arm64_x86_64/iphonesimulator_arm64/libhev-socks5-tunnel.a
          make clean
          make PP="xcrun -sdk iphonesimulator clang" \
               CC="xcrun -sdk iphonesimulator clang" \
               CFLAGS="-arch x86_64 -mios-simulator-version-min=12.0" \
               LFLAGS="-arch x86_64 -mios-simulator-version-min=12.0 -Wl,-Bsymbolic-functions" static
          cp bin/libhev-socks5-tunnel.a ../iphonesimulator_arm64_x86_64/iphonesimulator_x86_64/libhev-socks5-tunnel.a
          make clean
          cd ../iphonesimulator_arm64_x86_64
          lipo -create -o ./libhev-socks5-tunnel.a ./iphonesimulator_arm64/libhev-socks5-tunnel.a ./iphonesimulator_x86_64/libhev-socks5-tunnel.a
          
      - name: Build xcframework
        run: |
          mkdir include
          cp temp/src/hev-main.h include/hev-socks5-tunnel.h
          cp ./Templates/HevSocks5Tunnel.template include/module.modulemap
          xcodebuild -create-xcframework \
                     -library ./iphoneos_arm64/libhev-socks5-tunnel.a \
                     -headers ./include \
                     -library ./iphonesimulator_arm64_x86_64/libhev-socks5-tunnel.a \
                     -headers ./include \
                     -library ./macos_arm64_x86_64/libhev-socks5-tunnel.a \
                     -headers ./include \
                     -output ./HevSocks5Tunnel.xcframework
          zip -r HevSocks5Tunnel.xcframework.zip HevSocks5Tunnel.xcframework
          
      - name: Rende Template
        run: |
          export TEMP=`shasum -a 256 ./HevSocks5Tunnel.xcframework.zip`
          export CHECKSUM=${TEMP:0:64}
          cd Templates
          sed -i "_bak" "s/VERSION/${{ github.event.inputs.version }}/g" Package.template
          sed -i "_bak" "s/CHECKSUM/${CHECKSUM}/g" Package.template
          
      - name: Update Package.swift
        run: |
          rm -f Package.swift
          cp ./Templates/Package.template Package.swift
          
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Tun2SocksKit Release ${{ github.event.inputs.version }}!!!
          commit_user_name: tozik
          commit_user_email: tozika@inbox.ru
          commit_author: Tozik <tozika@inbox.ru>
          tagging_message: ${{ github.event.inputs.version }}
          file_pattern: 'Package.swift'
          
      # Проверяем артефакт
      - name: Zip xcframework
        run: |
          zip -r HevSocks5Tunnel.xcframework.zip ./HevSocks5Tunnel.xcframework
                
      # Сохраняем Package.swift
      - name: Save Package.swift
        run: |
          mkdir -p /tmp/package_backup
          cp Package.swift /tmp/package_backup/

      # Клонируем публичный репозиторий
      - name: Clone public repo
        uses: actions/checkout@v3
        with:
          repository: 'tozik/Tun2SocksKit'
          token: ${{ secrets.SECOND_REPO_TOKEN }}

      # Восстанавливаем Package.swift
      - name: Restore Package.swift
        run: |
          cp /tmp/package_backup/Package.swift ./
          echo "Содержимое текущего каталога после восстановления:"
          ls
          
      # Копируем Package.swift и пушим изменения
      - name: Copy and commit xcframework
        run: |
          git add Package.swift
          git commit -m "Add build artifact: ${{ github.event.inputs.version }}"
          git push
      
      # Загрузим релизный артефакт в публичный репозиторий
      - name: Upload release asset to second repo
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          tag_name: ${{ github.event.inputs.version }}
          body: 'Release built from source'
          files: ./HevSocks5Tunnel.xcframework.zip
          repository: 'tozik/Tun2SocksKit'
          token: ${{ secrets.SECOND_REPO_TOKEN }}
